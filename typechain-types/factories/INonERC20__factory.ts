/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { INonERC20, INonERC20Interface } from "../INonERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061063c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146100ef578063a457c2d714610118578063a9059cbb1461012b578063dd62ed3e1461013e57600080fd5b8063095ea7b31461008d57806318160ddd146100b557806323b872dd146100c757806339509351146100dc575b600080fd5b6100a061009b366004610506565b610177565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100ac565b6100da6100d5366004610530565b61018d565b005b6100a06100ea366004610506565b6101d8565b6100b96100fd36600461056c565b6001600160a01b031660009081526020819052604090205490565b6100a0610126366004610506565b61020f565b6100da610139366004610506565b610246565b6100b961014c36600461058e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610184338484610255565b50600192915050565b61019883838361037f565b6001600160a01b0383166000908152600160209081526040808320338085529252909120546101d39185916101ce9085906105d7565b610255565b505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101849185906101ce9086906105ee565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101849185906101ce9086906105d7565b61025133838361037f565b5050565b6001600160a01b0383166102bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b03821661031d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102b3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166103e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102b3565b6001600160a01b0382166104455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102b3565b6001600160a01b0383166000908152602081905260409020546104699082906105d7565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104999082906105ee565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610372565b80356001600160a01b038116811461050157600080fd5b919050565b6000806040838503121561051957600080fd5b610522836104ea565b946020939093013593505050565b60008060006060848603121561054557600080fd5b61054e846104ea565b925061055c602085016104ea565b9150604084013590509250925092565b60006020828403121561057e57600080fd5b610587826104ea565b9392505050565b600080604083850312156105a157600080fd5b6105aa836104ea565b91506105b8602084016104ea565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105e9576105e96105c1565b500390565b60008219821115610601576106016105c1565b50019056fea26469706673582212201c57c5de208c5cb43192777cc1f108dbca82cd6f3965f57e4140dcc8c8b6bbcc64736f6c63430008090033";

type INonERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: INonERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class INonERC20__factory extends ContractFactory {
  constructor(...args: INonERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "INonERC20";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<INonERC20> {
    return super.deploy(overrides || {}) as Promise<INonERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): INonERC20 {
    return super.attach(address) as INonERC20;
  }
  connect(signer: Signer): INonERC20__factory {
    return super.connect(signer) as INonERC20__factory;
  }
  static readonly contractName: "INonERC20";
  public readonly contractName: "INonERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): INonERC20Interface {
    return new utils.Interface(_abi) as INonERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): INonERC20 {
    return new Contract(address, _abi, signerOrProvider) as INonERC20;
  }
}
