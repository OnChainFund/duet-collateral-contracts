/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeConf, FeeConfInterface } from "../FeeConf";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "rate",
        type: "uint16",
      },
    ],
    name: "SetConfig",
    type: "event",
  },
  {
    inputs: [],
    name: "PercentBase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_rate",
        type: "uint16",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161069e38038061069e83398101604081905261002f91610200565b61003833610088565b610051687969656c645f66656560b81b826107d06100d8565b61006a69626f72726f775f66656560b01b8260326100d8565b6100826872657061795f66656560b81b8260646100d8565b50610230565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146101375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03821661017f5760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f5245434549564560881b604482015260640161012e565b600083815260016020908152604091829020805461ffff8516600160a01b81026001600160b01b03199092166001600160a01b0388169081179290921783558451888152938401919091528284015291517f5e53837f694f1ac3e24af3cba528e48c225bec42433a738cbefa084c404ad5d29181900360600190a150505050565b60006020828403121561021257600080fd5b81516001600160a01b038116811461022957600080fd5b9392505050565b61045f8061023f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806341b3fb4e146100675780636dd5b69d1461007c578063715018a6146100ec5780638da5cb5b146100f4578063b9eefa691461010f578063f2fde38b14610126575b600080fd5b61007a610075366004610372565b610139565b005b6100c861008a3660046103b9565b6000908152600160209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910461ffff169290910182905291565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b61007a610235565b6000546040516001600160a01b0390911681526020016100e3565b61011861271081565b6040519081526020016100e3565b61007a6101343660046103d2565b61026b565b6000546001600160a01b0316331461016c5760405162461bcd60e51b8152600401610163906103f4565b60405180910390fd5b6001600160a01b0382166101b45760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f5245434549564560881b6044820152606401610163565b600083815260016020908152604091829020805461ffff8516600160a01b81026001600160b01b03199092166001600160a01b0388169081179290921783558451888152938401919091528284015291517f5e53837f694f1ac3e24af3cba528e48c225bec42433a738cbefa084c404ad5d29181900360600190a150505050565b6000546001600160a01b0316331461025f5760405162461bcd60e51b8152600401610163906103f4565b6102696000610306565b565b6000546001600160a01b031633146102955760405162461bcd60e51b8152600401610163906103f4565b6001600160a01b0381166102fa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610163565b61030381610306565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461036d57600080fd5b919050565b60008060006060848603121561038757600080fd5b8335925061039760208501610356565b9150604084013561ffff811681146103ae57600080fd5b809150509250925092565b6000602082840312156103cb57600080fd5b5035919050565b6000602082840312156103e457600080fd5b6103ed82610356565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220bc3b43ce219a7487419a1613d31a05ed1a57c805267e5dcb9d8a68130610533f64736f6c63430008090033";

type FeeConfConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeConfConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeConf__factory extends ContractFactory {
  constructor(...args: FeeConfConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FeeConf";
  }

  deploy(
    receiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeConf> {
    return super.deploy(receiver, overrides || {}) as Promise<FeeConf>;
  }
  getDeployTransaction(
    receiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(receiver, overrides || {});
  }
  attach(address: string): FeeConf {
    return super.attach(address) as FeeConf;
  }
  connect(signer: Signer): FeeConf__factory {
    return super.connect(signer) as FeeConf__factory;
  }
  static readonly contractName: "FeeConf";
  public readonly contractName: "FeeConf";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeConfInterface {
    return new utils.Interface(_abi) as FeeConfInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeConf {
    return new Contract(address, _abi, signerOrProvider) as FeeConf;
  }
}
