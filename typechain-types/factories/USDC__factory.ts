/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { USDC, USDCInterface } from "../USDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_n",
        type: "string",
      },
      {
        internalType: "string",
        name: "_s",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805460ff191660121790553480156200001e57600080fd5b5060405162000b9538038062000b958339810160408190526200004191620002f3565b81516200005690600390602085019062000180565b5080516200006c90600490602084019062000180565b5062000085336be22ea493b30310a7700000006200008d565b5050620003c1565b6001600160a01b038216620000e85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80620000f2575050565b806002546200010291906200035d565b6002556001600160a01b0382166000908152602081905260409020546200012b9082906200035d565b6001600160a01b038316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200018e9062000384565b90600052602060002090601f016020900481019282620001b25760008555620001fd565b82601f10620001cd57805160ff1916838001178555620001fd565b82800160010185558215620001fd579182015b82811115620001fd578251825591602001919060010190620001e0565b506200020b9291506200020f565b5090565b5b808211156200020b576000815560010162000210565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200024e57600080fd5b81516001600160401b03808211156200026b576200026b62000226565b604051601f8301601f19908116603f0116810190828211818310171562000296576200029662000226565b81604052838152602092508683858801011115620002b357600080fd5b600091505b83821015620002d75785820183015181830184015290820190620002b8565b83821115620002e95760008385830101525b9695505050505050565b600080604083850312156200030757600080fd5b82516001600160401b03808211156200031f57600080fd5b6200032d868387016200023c565b935060208501519150808211156200034457600080fd5b5062000353858286016200023c565b9150509250929050565b600082198211156200037f57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200039957607f821691505b60208210811415620003bb57634e487b7160e01b600052602260045260246000fd5b50919050565b6107c480620003d16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012b57806370a082311461013e57806395d89b4114610167578063a457c2d71461016f578063a9059cbb14610182578063dd62ed3e1461019557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610116575b600080fd5b6100b66101ce565b6040516100c391906105e2565b60405180910390f35b6100df6100da366004610653565b610260565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b61011461010f36600461067d565b610276565b005b60055460405160ff90911681526020016100c3565b6100df610139366004610653565b6102c1565b6100f361014c3660046106b9565b6001600160a01b031660009081526020819052604090205490565b6100b66102f8565b6100df61017d366004610653565b610307565b610114610190366004610653565b61033e565b6100f36101a33660046106db565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101dd9061070e565b80601f01602080910402602001604051908101604052809291908181526020018280546102099061070e565b80156102565780601f1061022b57610100808354040283529160200191610256565b820191906000526020600020905b81548152906001019060200180831161023957829003601f168201915b5050505050905090565b600061026d33848461034d565b50600192915050565b610281838383610477565b6001600160a01b0383166000908152600160209081526040808320338085529252909120546102bc9185916102b790859061075f565b61034d565b505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026d9185906102b7908690610776565b6060600480546101dd9061070e565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026d9185906102b790869061075f565b610349338383610477565b5050565b6001600160a01b0383166103b45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ab565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166104db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ab565b6001600160a01b03821661053d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ab565b6001600160a01b03831660009081526020819052604090205461056190829061075f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610591908290610776565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161046a565b600060208083528351808285015260005b8181101561060f578581018301518582016040015282016105f3565b81811115610621576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461064e57600080fd5b919050565b6000806040838503121561066657600080fd5b61066f83610637565b946020939093013593505050565b60008060006060848603121561069257600080fd5b61069b84610637565b92506106a960208501610637565b9150604084013590509250925092565b6000602082840312156106cb57600080fd5b6106d482610637565b9392505050565b600080604083850312156106ee57600080fd5b6106f783610637565b915061070560208401610637565b90509250929050565b600181811c9082168061072257607f821691505b6020821081141561074357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561077157610771610749565b500390565b6000821982111561078957610789610749565b50019056fea26469706673582212209cee4de737587945ddb303da708a6887fb987424ca5c64022e271675246ab38c64736f6c63430008090033";

type USDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDC__factory extends ContractFactory {
  constructor(...args: USDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "USDC";
  }

  deploy(
    _n: string,
    _s: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDC> {
    return super.deploy(_n, _s, overrides || {}) as Promise<USDC>;
  }
  getDeployTransaction(
    _n: string,
    _s: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_n, _s, overrides || {});
  }
  attach(address: string): USDC {
    return super.attach(address) as USDC;
  }
  connect(signer: Signer): USDC__factory {
    return super.connect(signer) as USDC__factory;
  }
  static readonly contractName: "USDC";
  public readonly contractName: "USDC";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCInterface {
    return new utils.Interface(_abi) as USDCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): USDC {
    return new Contract(address, _abi, signerOrProvider) as USDC;
  }
}
