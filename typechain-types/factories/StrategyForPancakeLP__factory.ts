/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StrategyForPancakeLP,
  StrategyForPancakeLPInterface,
} from "../StrategyForPancakeLP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fee",
        type: "address",
      },
      {
        internalType: "address",
        name: "_want",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "SetController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "SetFeeConf",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestAmount",
        type: "uint256",
      },
    ],
    name: "SetMinHarvestAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "PercentBase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "doApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeConf",
    outputs: [
      {
        internalType: "contract IFeeConf",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWant",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "inCaseTokensGetStuck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "masterChef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minHarvestAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "output",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "outputToToken0Path",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "outputToToken1Path",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeConf",
        type: "address",
      },
    ],
    name: "setFeeConf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
    ],
    name: "setMinHarvestAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
    ],
    name: "setToken0Path",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
    ],
    name: "setToken1Path",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162003248380380620032488339810160408190526200003591620008ca565b858585846001600160a01b031663dce174846040518163ffffffff1660e01b815260040160206040518083038186803b1580156200007257600080fd5b505afa15801562000087573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ad919062000942565b620000b833620002aa565b600480546001600160a01b03199081166001600160a01b039687161782556001805482169487169490941790935560028054841692861692909217909155670de0b6b3a76400006003556005805490921692841692909217905584821660805283821660a05260c083905260408051630dfe168160e01b8152905192871692630dfe168192828101926020929190829003018186803b1580156200015b57600080fd5b505afa15801562000170573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000196919062000942565b6001600160a01b031660e0816001600160a01b031681525050836001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015620001e957600080fd5b505afa158015620001fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000224919062000942565b6001600160a01b039081166101005260408051808201909152600280548316825260e05190921660208201526200025f91600691906200082c565b5060408051808201909152600280546001600160a01b0390811683526101005116602083015262000293916007916200082c565b506200029e620002fa565b50505050505062000a24565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000324608051600060e0516001600160a01b03166200045660201b620016cc179092919060201c565b6200034f60805160001960e0516001600160a01b03166200045660201b620016cc179092919060201c565b6200037a6080516000610100516001600160a01b03166200045660201b620016cc179092919060201c565b620003a6608051600019610100516001600160a01b03166200045660201b620016cc179092919060201c565b608051600254620003d1916001600160a01b0390911690600062000456602090811b620016cc17901c565b608051600254620003fd916001600160a01b039091169060001962000456602090811b620016cc17901c565b60a05160015462000428916001600160a01b0390911690600062000456602090811b620016cc17901c565b60a05160015462000454916001600160a01b039091169060001962000456602090811b620016cc17901c565b565b801580620004e45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015620004a757600080fd5b505afa158015620004bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e2919062000960565b155b6200055c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620005b4918591620005b916565b505050565b600062000615826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200069760201b62001823179092919060201c565b805190915015620005b457808060200190518101906200063691906200097a565b620005b45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000553565b6060620006a88484600085620006b2565b90505b9392505050565b606082471015620007155760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000553565b6001600160a01b0385163b6200076e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000553565b600080866001600160a01b031685876040516200078c9190620009d1565b60006040518083038185875af1925050503d8060008114620007cb576040519150601f19603f3d011682016040523d82523d6000602084013e620007d0565b606091505b509092509050620007e3828286620007ee565b979650505050505050565b60608315620007ff575081620006ab565b825115620008105782518084602001fd5b8160405162461bcd60e51b8152600401620005539190620009ef565b82805482825590600052602060002090810192821562000884579160200282015b828111156200088457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200084d565b506200089292915062000896565b5090565b5b8082111562000892576000815560010162000897565b80516001600160a01b0381168114620008c557600080fd5b919050565b60008060008060008060c08789031215620008e457600080fd5b620008ef87620008ad565b9550620008ff60208801620008ad565b94506200090f60408801620008ad565b93506200091f60608801620008ad565b92506200092f60808801620008ad565b915060a087015190509295509295509295565b6000602082840312156200095557600080fd5b620006ab82620008ad565b6000602082840312156200097357600080fd5b5051919050565b6000602082840312156200098d57600080fd5b81518015158114620006ab57600080fd5b60005b83811015620009bb578181015183820152602001620009a1565b83811115620009cb576000848401525b50505050565b60008251620009e58184602087016200099e565b9190910192915050565b602081526000825180602084015262000a108160408501602087016200099e565b601f01601f19169190910160400192915050565b60805160a05160c05160e051610100516126ea62000b5e6000396000818161037e01528181610a0901528181610a5e01528181611ba60152611c5e01526000818161020a0152818161095e015281816109b301528181611b010152611c360152600081816103b80152818161045c01528181610521015281816107d0015281816108b601528181610e2201528181611263015281816115110152611d5c0152600081816102920152818161048b0152818161055a015281816107a9015281816108e301528181610b2a01528181610b6201528181610e52015281816112890152818161153e0152611d8c01526000818161041801528181610980015281816109d501528181610a2b01528181610a8001528181610ab901528181610af10152818161198501528181611a3c0152611cb301526126ea6000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806392eefe9b1161010f578063d21220a7116100a2578063f2fde38b11610071578063f2fde38b146103ed578063f77c479114610400578063f887ea4014610413578063faa1603f1461043a57600080fd5b8063d21220a714610379578063da247bcd146103a0578063f1068454146103b3578063f20eaeb8146103da57600080fd5b8063bcfcfc73116100de578063bcfcfc731461034d578063c6d758cb14610356578063caa6fea414610369578063d0e30db01461037157600080fd5b806392eefe9b1461030b5780639f656f261461031e578063b599e1db14610331578063b9eefa691461034457600080fd5b8063575a86b211610187578063722713f711610156578063722713f7146102d7578063853828b6146102df578063877c8cd1146102e75780638da5cb5b146102fa57600080fd5b8063575a86b21461028d5780635bb5ebbe146102b45780636695535c146102bc578063715018a6146102cf57600080fd5b80631e30ffa7116101c35780631e30ffa71461024c5780632e1a7d4d146102615780634641257d146102745780634e907bad1461027c57600080fd5b80630d844e74146101ea5780630dfe1681146102055780631158808614610244575b600080fd5b6101f261044d565b6040519081526020015b60405180910390f35b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fc565b6101f2610512565b61025f61025a366004612234565b6105da565b005b61025f61026f366004612234565b610649565b61025f6108a7565b6001546001600160a01b031661022c565b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b61025f610951565b61025f6102ca366004612262565b610b89565b61025f610c49565b6101f2610c7d565b6101f2610d17565b60055461022c906001600160a01b031681565b6000546001600160a01b031661022c565b61025f610319366004612262565b6110ac565b61022c61032c366004612234565b61116f565b61025f61033f3660046122ea565b611199565b6101f261271081565b6101f260035481565b61025f61036436600461237e565b6111da565b61025f61122a565b61025f61147e565b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b61022c6103ae366004612234565b6115e7565b6101f27f000000000000000000000000000000000000000000000000000000000000000081565b60025461022c906001600160a01b031681565b61025f6103fb366004612262565b6115f7565b60045461022c906001600160a01b031681565b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b61025f6104483660046122ea565b61168f565b604051631175a1dd60e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631175a1dd9060440160206040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906123aa565b905090565b6040516393f1a40b60e01b81527f0000000000000000000000000000000000000000000000000000000000000000600482015230602482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393f1a40b90604401604080518083038186803b15801561059b57600080fd5b505afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d391906123c3565b5092915050565b6000546001600160a01b0316331461060d5760405162461bcd60e51b8152600401610604906123e7565b60405180910390fd5b60038190556040518181527f918b536bac43dad24d26af69c7e5b5090db08d0e4295a096828257241c81a86b906020015b60405180910390a150565b6004805460015460405163aaace60160e01b81526001600160a01b039182169381019390935260009291169063aaace6019060240160206040518083038186803b15801561069657600080fd5b505afa1580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce919061241c565b9050336001600160a01b038216146107195760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21031b0b63632b960911b6044820152606401610604565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561075d57600080fd5b505afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079591906123aa565b905082811015610850576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663441a3e707f00000000000000000000000000000000000000000000000000000000000000006107f9848761244f565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b505050505b600154610867906001600160a01b0316838561183c565b6040518381527f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9060200160405180910390a16108a26118f3565b505050565b604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb15890604401600060405180830381600087803b15801561092f57600080fd5b505af1158015610943573d6000803e3d6000fd5b5050505061094f6118f3565b565b6109a66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000060006116cc565b6109fc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000006000196116cc565b610a516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000060006116cc565b610aa76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000006000196116cc565b600254610adf906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000060006116cc565b600254610b18906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006000196116cc565b600154610b50906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000060006116cc565b60015461094f906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006000196116cc565b6000546001600160a01b03163314610bb35760405162461bcd60e51b8152600401610604906123e7565b6001600160a01b038116610bfb5760405162461bcd60e51b815260206004820152600f60248201526e24a72b20a624a22fa322a2a1a7a72360891b6044820152606401610604565b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f09e4ff0ad2e1dd64d0efead5845f8aa70283f3c0fcf0e2c93cf08c3e643c8ab39060200161063e565b6000546001600160a01b03163314610c735760405162461bcd60e51b8152600401610604906123e7565b61094f6000611e31565b6001546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a082319060240160206040518083038186803b158015610cc557600080fd5b505afa158015610cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfd91906123aa565b9050610d07610512565b610d119082612466565b91505090565b6004805460015460405163aaace60160e01b81526001600160a01b03918216938101939093526000928392919091169063aaace6019060240160206040518083038186803b158015610d6857600080fd5b505afa158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da0919061241c565b6004549091506001600160a01b0316331480610dc45750336001600160a01b038216145b610e015760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21031b0b63632b960911b6044820152606401610604565b610e096118f3565b6000610e13610512565b604051630441a3e760e41b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063441a3e7090604401600060405180830381600087803b158015610e9e57600080fd5b505af1158015610eb2573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b158015610efc57600080fd5b505afa158015610f10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3491906123aa565b600154909150610f4e906001600160a01b03168483611e81565b6040518181527f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9060200160405180910390a16002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610fc557600080fd5b505afa158015610fd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffd91906123aa565b600554604051636dd5b69d60e01b8152687969656c645f66656560b81b60048201529192506000916001600160a01b0390911690636dd5b69d90602401604080518083038186803b15801561105157600080fd5b505afa158015611065573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611089919061247e565b506002549091506110a4906001600160a01b03168284611e81565b505050505090565b6000546001600160a01b031633146110d65760405162461bcd60e51b8152600401610604906123e7565b6001600160a01b0381166111215760405162461bcd60e51b815260206004820152601260248201527124a72b20a624a22fa1a7a72a2927a62622a960711b6044820152606401610604565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527f4ff638452bbf33c012645d18ae6f05515ff5f2d1dfb0cece8cbf018c60903f709060200161063e565b6006818154811061117f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146111c35760405162461bcd60e51b8152600401610604906123e7565b80516111d69060069060208401906121ba565b5050565b6000546001600160a01b031633146112045760405162461bcd60e51b8152600401610604906123e7565b6111d66112196000546001600160a01b031690565b6001600160a01b0384169083611e81565b6000546001600160a01b031633146112545760405162461bcd60e51b8152600401610604906123e7565b604051632989754760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635312ea8e90602401600060405180830381600087803b1580156112d557600080fd5b505af11580156112e9573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b15801561133357600080fd5b505afa158015611347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136b91906123aa565b6004805460015460405163aaace60160e01b81526001600160a01b0391821693810193909352929350600092169063aaace6019060240160206040518083038186803b1580156113ba57600080fd5b505afa1580156113ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f2919061241c565b90506001600160a01b0381161561141f5760015461141a906001600160a01b03168284611e81565b611447565b6114476114346000546001600160a01b031690565b6001546001600160a01b03169084611e81565b6040518281527f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9060200160405180910390a15050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156114c257600080fd5b505afa1580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fa91906123aa565b905080156115dc57604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb15890604401600060405180830381600087803b15801561158a57600080fd5b505af115801561159e573d6000803e3d6000fd5b505050507f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426816040516115d391815260200190565b60405180910390a15b6115e46118f3565b50565b6007818154811061117f57600080fd5b6000546001600160a01b031633146116215760405162461bcd60e51b8152600401610604906123e7565b6001600160a01b0381166116865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610604565b6115e481611e31565b6000546001600160a01b031633146116b95760405162461bcd60e51b8152600401610604906123e7565b80516111d69060079060208401906121ba565b8015806117555750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561171b57600080fd5b505afa15801561172f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175391906123aa565b155b6117c05760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610604565b6040516001600160a01b0383166024820152604481018290526108a290849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611eb1565b60606118328484600085611f83565b90505b9392505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b15801561187e57600080fd5b505afa158015611892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b691906123aa565b9050818111156118d9576118d46001600160a01b0385168484611e81565b6118ed565b6118ed6001600160a01b0385168483611e81565b50505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561193757600080fd5b505afa15801561194b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196f91906123aa565b90506003548111156115e4576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166338ed17396119b56002846124ac565b6000600630426040518663ffffffff1660e01b81526004016119db9594939291906124ce565b600060405180830381600087803b1580156119f557600080fd5b505af1158015611a09573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a319190810190612544565b506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166338ed1739611a6c6002846124ac565b6000600730426040518663ffffffff1660e01b8152600401611a929594939291906124ce565b600060405180830381600087803b158015611aac57600080fd5b505af1158015611ac0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ae89190810190612544565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015611b4b57600080fd5b505afa158015611b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8391906123aa565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015611be857600080fd5b505afa158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2091906123aa565b60405162e8e33760e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018590526064820183905260006084830181905260a483018190523060c48401524260e48401529293507f0000000000000000000000000000000000000000000000000000000000000000169063e8e337009061010401606060405180830381600087803b158015611cf857600080fd5b505af1158015611d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3091906125ca565b925050506000611d3f826120b4565b90506000611d4d828461244f565b604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb15890604401600060405180830381600087803b158015611dd857600080fd5b505af1158015611dec573d6000803e3d6000fd5b505050507f80f97f878e16410266694f134ddf012f2be424f54f8b5cafa107eccc51d00d5881604051611e2191815260200190565b60405180910390a1505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383166024820152604481018290526108a290849063a9059cbb60e01b906064016117ec565b6000611f06826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118239092919063ffffffff16565b8051909150156108a25780806020019051810190611f2491906125f8565b6108a25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610604565b606082471015611fe45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610604565b6001600160a01b0385163b61203b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610604565b600080866001600160a01b031685876040516120579190612646565b60006040518083038185875af1925050503d8060008114612094576040519150601f19603f3d011682016040523d82523d6000602084013e612099565b606091505b50915091506120a9828286612181565b979650505050505050565b600554604051636dd5b69d60e01b8152687969656c645f66656560b81b6004820152600091829182916001600160a01b031690636dd5b69d90602401604080518083038186803b15801561210757600080fd5b505afa15801561211b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213f919061247e565b90925090506127106121518286612662565b61215b91906124ac565b9250821561217a5760015461217a906001600160a01b03168385611e81565b5050919050565b60608315612190575081611835565b8251156121a05782518084602001fd5b8160405162461bcd60e51b81526004016106049190612681565b82805482825590600052602060002090810192821561220f579160200282015b8281111561220f57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906121da565b5061221b92915061221f565b5090565b5b8082111561221b5760008155600101612220565b60006020828403121561224657600080fd5b5035919050565b6001600160a01b03811681146115e457600080fd5b60006020828403121561227457600080fd5b81356118358161224d565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156122be576122be61227f565b604052919050565b600067ffffffffffffffff8211156122e0576122e061227f565b5060051b60200190565b600060208083850312156122fd57600080fd5b823567ffffffffffffffff81111561231457600080fd5b8301601f8101851361232557600080fd5b8035612338612333826122c6565b612295565b81815260059190911b8201830190838101908783111561235757600080fd5b928401925b828410156120a957833561236f8161224d565b8252928401929084019061235c565b6000806040838503121561239157600080fd5b823561239c8161224d565b946020939093013593505050565b6000602082840312156123bc57600080fd5b5051919050565b600080604083850312156123d657600080fd5b505080516020909101519092909150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561242e57600080fd5b81516118358161224d565b634e487b7160e01b600052601160045260246000fd5b60008282101561246157612461612439565b500390565b6000821982111561247957612479612439565b500190565b6000806040838503121561249157600080fd5b825161249c8161224d565b6020939093015192949293505050565b6000826124c957634e487b7160e01b600052601260045260246000fd5b500490565b600060a082018783526020878185015260a0604085015281875480845260c0860191508860005282600020935060005b818110156125235784546001600160a01b0316835260019485019492840192016124fe565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561255757600080fd5b825167ffffffffffffffff81111561256e57600080fd5b8301601f8101851361257f57600080fd5b805161258d612333826122c6565b81815260059190911b820183019083810190878311156125ac57600080fd5b928401925b828410156120a9578351825292840192908401906125b1565b6000806000606084860312156125df57600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561260a57600080fd5b8151801515811461183557600080fd5b60005b8381101561263557818101518382015260200161261d565b838111156118ed5750506000910152565b6000825161265881846020870161261a565b9190910192915050565b600081600019048311821515161561267c5761267c612439565b500290565b60208152600082518060208401526126a081604085016020870161261a565b601f01601f1916919091016040019291505056fea2646970667358221220c3300d787a5b26399781e27dd236a8201cf08ce40922480d8a2d95a96d2658a864736f6c63430008090033";

type StrategyForPancakeLPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyForPancakeLPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyForPancakeLP__factory extends ContractFactory {
  constructor(...args: StrategyForPancakeLPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StrategyForPancakeLP";
  }

  deploy(
    _controller: string,
    _fee: string,
    _want: string,
    _router: string,
    _master: string,
    _pid: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StrategyForPancakeLP> {
    return super.deploy(
      _controller,
      _fee,
      _want,
      _router,
      _master,
      _pid,
      overrides || {}
    ) as Promise<StrategyForPancakeLP>;
  }
  getDeployTransaction(
    _controller: string,
    _fee: string,
    _want: string,
    _router: string,
    _master: string,
    _pid: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _fee,
      _want,
      _router,
      _master,
      _pid,
      overrides || {}
    );
  }
  attach(address: string): StrategyForPancakeLP {
    return super.attach(address) as StrategyForPancakeLP;
  }
  connect(signer: Signer): StrategyForPancakeLP__factory {
    return super.connect(signer) as StrategyForPancakeLP__factory;
  }
  static readonly contractName: "StrategyForPancakeLP";
  public readonly contractName: "StrategyForPancakeLP";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyForPancakeLPInterface {
    return new utils.Interface(_abi) as StrategyForPancakeLPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyForPancakeLP {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StrategyForPancakeLP;
  }
}
