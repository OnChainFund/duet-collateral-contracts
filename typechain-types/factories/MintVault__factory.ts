/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MintVault, MintVaultInterface } from "../MintVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeconf",
        type: "address",
      },
    ],
    name: "FeeConfChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
    ],
    name: "Liquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "repayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leftBorrows",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    inputs: [],
    name: "PercentBase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "borrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeConf",
    outputs: [
      {
        internalType: "contract IFeeConf",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeConf",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isDuetVault",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
    ],
    name: "pendingValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repayTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setAppController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeConf",
        type: "address",
      },
    ],
    name: "setFeeConf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "exData",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dp",
        type: "bool",
      },
    ],
    name: "underlyingAmountValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "dp",
        type: "bool",
      },
    ],
    name: "userValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dp",
        type: "bool",
      },
    ],
    name: "valueToAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611dff806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063ba58591c1161007c578063ba58591c1461027c578063c0c53b8b1461028f578063c5ebeaec146102a2578063d0314263146102b5578063f2fde38b146102c8578063f77c4791146102db57600080fd5b80638da5cb5b14610229578063a06a9ff41461023a578063a0d9d1d91461024d578063ae318c4d14610260578063b9eefa691461027357600080fd5b80636695535c116100ff5780636695535c146101bd5780636f307dc3146101d0578063715018a6146101fb57806374eb83c114610203578063877c8cd11461021657600080fd5b8063142239021461013c5780631db44b8e14610151578063371fd8e61461017757806354a5706f1461018a5780635ac28bf9146101aa575b600080fd5b61014f61014a36600461179d565b6102ee565b005b61016461015f3660046117d7565b610300565b6040519081526020015b60405180910390f35b61014f610185366004611807565b610481565b610164610198366004611820565b609a6020526000908152604090205481565b6101646101b836600461179d565b610492565b61014f6101cb366004611820565b610502565b6097546101e3906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61014f6105d2565b61014f610211366004611886565b610608565b6099546101e3906001600160a01b031681565b6033546001600160a01b03166101e3565b6101646102483660046117d7565b61061a565b61014f61025b366004611820565b610757565b61016461026e3660046118eb565b61081a565b61016461271081565b60015b604051901515815260200161016e565b61014f61029d366004611919565b610869565b61014f6102b0366004611807565b6109ae565b61027f6102c3366004611964565b6109bb565b61014f6102d6366004611820565b610a45565b6098546101e3906001600160a01b031681565b6102fb3383836000610add565b505050565b60008261030f5750600061047b565b6098546097546040516306b3632760e21b81526001600160a01b03918216600482015260009283921690631acd8c9c9060240160606040518083038186803b15801561035a57600080fd5b505afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039291906119bf565b6097546040516341976e0960e01b81526001600160a01b03918216600482015293955061ffff91909116935060009290851691506341976e099060240160206040518083038186803b1580156103e757600080fd5b505afa1580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190611a04565b9050841561045d57609b54612710836104388985611a33565b6104429190611a33565b61044c9190611a52565b6104569190611a52565b9350610477565b609b5461046a8783611a33565b6104749190611a52565b93505b5050505b92915050565b61048e3333836000610add565b5050565b60008082126104d1576001600160a01b0383166000908152609a60205260409020546104ca906104c3908490611a74565b6001610300565b905061047b565b6104ca6104df836000611a8c565b6001600160a01b0385166000908152609a60205260409020546104c39190611acb565b6033546001600160a01b031633146105355760405162461bcd60e51b815260040161052c90611ae2565b60405180910390fd5b6001600160a01b03811661057d5760405162461bcd60e51b815260206004820152600f60248201526e24a72b20a624a22fa322a2a1a7a72360891b604482015260640161052c565b609980546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f848457f88c295370f87d543957f8cfe46e0759b3a528ae233eb79885a2949d906020015b60405180910390a150565b6033546001600160a01b031633146105fc5760405162461bcd60e51b815260040161052c90611ae2565b6106066000610c06565b565b61061484848484610c58565b50505050565b6098546097546040516306b3632760e21b81526001600160a01b03918216600482015260009283928392911690631acd8c9c9060240160606040518083038186803b15801561066857600080fd5b505afa15801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a091906119bf565b6097546040516341976e0960e01b81526001600160a01b03918216600482015293955061ffff91909116935060009290851691506341976e099060240160206040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190611a04565b90508415610748578181612710609b54896104389190611a33565b80609b548761046a9190611a33565b6033546001600160a01b031633146107815760405162461bcd60e51b815260040161052c90611ae2565b6001600160a01b0381166107cc5760405162461bcd60e51b815260206004820152601260248201527124a72b20a624a22fa1a7a72a2927a62622a960711b604482015260640161052c565b609880546001600160a01b0319166001600160a01b0383169081179091556040519081527f027c3e080ed9215f564a9455a666f7e459b3edc0bb6e02a1bf842fde4d0ccfc1906020016105c7565b6001600160a01b0382166000908152609a602052604081205461083f5750600061047b565b6001600160a01b0383166000908152609a60205260409020546108629083610300565b9392505050565b600054610100900460ff166108845760005460ff1615610888565b303b155b6108eb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161052c565b600054610100900460ff1615801561090d576000805461ffff19166101011790555b610918848484610e51565b816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561095157600080fd5b505afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190611b17565b61099490600a611c1e565b609b558015610614576000805461ff001916905550505050565b6109b83382610e98565b50565b6097546000906001600160a01b03163314610a095760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa1a0a62622a960911b604482015260640161052c565b6000610a188687876001610add565b905080851115610a3757610a3786610a308388611acb565b6001611088565b60019150505b949350505050565b6033546001600160a01b03163314610a6f5760405162461bcd60e51b815260040161052c90611ae2565b6001600160a01b038116610ad45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052c565b6109b881610c06565b600060026065541415610b025760405162461bcd60e51b815260040161052c90611c2d565b600260655582610b415760405162461bcd60e51b815260206004820152600a60248201526952455041595f5a45524f60b01b604482015260640161052c565b609854604051631a625c9760e21b81526001600160a01b0387811660048301523060248301526044820186905290911690636989725c9060640160006040518083038186803b158015610b9357600080fd5b505afa158015610ba7573d6000803e3d6000fd5b50505050610bb7858585856110fe565b905060008111610bf95760405162461bcd60e51b815260206004820152600d60248201526c4e4f5f4c4f414e5f524550415960981b604482015260640161052c565b6001606555949350505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60026065541415610c7b5760405162461bcd60e51b815260040161052c90611c2d565b60026065556098546001600160a01b03163314610cda5760405162461bcd60e51b815260206004820152601860248201527f4c49515549444154455f494e56414c49445f43414c4c45520000000000000000604482015260640161052c565b826001600160a01b0316846001600160a01b03161415610d3c5760405162461bcd60e51b815260206004820152601a60248201527f4c49515549444154455f44495341424c455f594f555253454c46000000000000604482015260640161052c565b6001600160a01b0383166000908152609a60205260409020548015610dd6578115610dcc5760975460405163fb66893b60e01b81526001600160a01b038088169263fb66893b92610d999289921690869089908990600401611c64565b600060405180830381600087803b158015610db357600080fd5b505af1158015610dc7573d6000803e3d6000fd5b505050505b610dd68582611332565b6001600160a01b0384166000908152609a6020526040812055610df88461134a565b836001600160a01b0316856001600160a01b03167fde0aa27286f5cb3a4ed853dc4823ead62d63e92cdf13de09d6aece56970721a483604051610e3d91815260200190565b60405180910390a350506001606555505050565b610e5961140e565b609880546001600160a01b039485166001600160a01b031991821617909155609980549385169382169390931790925560978054919093169116179055565b60026065541415610ebb5760405162461bcd60e51b815260040161052c90611c2d565b60026065556098546040516315caa9e760e11b81526001600160a01b0384811660048301523060248301526044820184905290911690632b9553ce9060640160006040518083038186803b158015610f1257600080fd5b505afa158015610f26573d6000803e3d6000fd5b5050609954604051636dd5b69d60e01b815269626f72726f775f66656560b01b6004820152600093508392506001600160a01b0390911690636dd5b69d90602401604080518083038186803b158015610f7e57600080fd5b505afa158015610f92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb69190611cb8565b90925090506000612710610fca8386611a33565b610fd49190611a52565b90506000610fe28286611acb565b6001600160a01b0387166000908152609a602052604081208054929350839290919061100f908490611a74565b9091555061101e90508661134a565b611028868261143d565b811561103857611038848361143d565b856001600160a01b03167fcbc04eca7e9da35cb1393a6135a199ca52e450d5e9251cbd99f7847d33a367508260405161107391815260200190565b60405180910390a25050600160655550505050565b6001600160a01b03831630141561109e57505050565b6001600160a01b0383166110e75760405162461bcd60e51b815260206004820152601060248201526f7265636569707420697320656d70747960801b604482015260640161052c565b6097546102fb906001600160a01b03168484611476565b6001600160a01b0383166000908152609a602052604081205480611126576000915050610a3d565b609954604051636dd5b69d60e01b81526872657061795f66656560b81b600482015260009182916001600160a01b0390911690636dd5b69d90602401604080518083038186803b15801561117957600080fd5b505afa15801561118d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b19190611cb8565b909250905060006127106111c58386611a33565b6111cf9190611a52565b905060006111dd8286611a74565b881061120f57506001600160a01b0388166000908152609a6020526040812055836112088282611a74565b9550611266565b61121b83612710611a74565b6112276127108a611a33565b6112319190611a52565b905061123d8189611acb565b91506112498186611acb565b6001600160a01b038a166000908152609a60205260409020558795505b8661127a576112758a87611332565b6112bf565b858810156112bf5760405162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f524550415960701b604482015260640161052c565b6112c8816114d9565b6112d484836001611088565b6001600160a01b0389166000818152609a6020908152604091829020548251858152918201527f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d0910160405180910390a25050505050949350505050565b60975461048e906001600160a01b031683308461153a565b6001600160a01b0381166000908152609a6020526040812054156113d45760985460405163c4c0048760e01b81526001600160a01b03848116600483015283151560248301529091169063c4c00487906044015b600060405180830381600087803b1580156113b857600080fd5b505af11580156113cc573d6000803e3d6000fd5b505050505050565b6098546040516379bf27b160e01b81526001600160a01b0384811660048301528315156024830152909116906379bf27b19060440161139e565b600054610100900460ff166114355760405162461bcd60e51b815260040161052c90611ce6565b610606611572565b6097546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f199060440161139e565b6040516001600160a01b0383166024820152604481018290526102fb90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115a2565b609754604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561151f57600080fd5b505af1158015611533573d6000803e3d6000fd5b5050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106149085906323b872dd60e01b906084016114a2565b600054610100900460ff166115995760405162461bcd60e51b815260040161052c90611ce6565b61060633610c06565b60006115f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116749092919063ffffffff16565b8051909150156102fb57808060200190518101906116159190611d31565b6102fb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161052c565b6060610a3d8484600085856001600160a01b0385163b6116d65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161052c565b600080866001600160a01b031685876040516116f29190611d7a565b60006040518083038185875af1925050503d806000811461172f576040519150601f19603f3d011682016040523d82523d6000602084013e611734565b606091505b509150915061174482828661174f565b979650505050505050565b6060831561175e575081610862565b82511561176e5782518084602001fd5b8160405162461bcd60e51b815260040161052c9190611d96565b6001600160a01b03811681146109b857600080fd5b600080604083850312156117b057600080fd5b82356117bb81611788565b946020939093013593505050565b80151581146109b857600080fd5b600080604083850312156117ea57600080fd5b8235915060208301356117fc816117c9565b809150509250929050565b60006020828403121561181957600080fd5b5035919050565b60006020828403121561183257600080fd5b813561086281611788565b60008083601f84011261184f57600080fd5b50813567ffffffffffffffff81111561186757600080fd5b60208301915083602082850101111561187f57600080fd5b9250929050565b6000806000806060858703121561189c57600080fd5b84356118a781611788565b935060208501356118b781611788565b9250604085013567ffffffffffffffff8111156118d357600080fd5b6118df8782880161183d565b95989497509550505050565b600080604083850312156118fe57600080fd5b823561190981611788565b915060208301356117fc816117c9565b60008060006060848603121561192e57600080fd5b833561193981611788565b9250602084013561194981611788565b9150604084013561195981611788565b809150509250925092565b6000806000806060858703121561197a57600080fd5b843561198581611788565b935060208501359250604085013567ffffffffffffffff8111156118d357600080fd5b805161ffff811681146119ba57600080fd5b919050565b6000806000606084860312156119d457600080fd5b83516119df81611788565b92506119ed602085016119a8565b91506119fb604085016119a8565b90509250925092565b600060208284031215611a1657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611a4d57611a4d611a1d565b500290565b600082611a6f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611a8757611a87611a1d565b500190565b60008083128015600160ff1b850184121615611aaa57611aaa611a1d565b6001600160ff1b0384018313811615611ac557611ac5611a1d565b50500390565b600082821015611add57611add611a1d565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611b2957600080fd5b815160ff8116811461086257600080fd5b600181815b80851115611b75578160001904821115611b5b57611b5b611a1d565b80851615611b6857918102915b93841c9390800290611b3f565b509250929050565b600082611b8c5750600161047b565b81611b995750600061047b565b8160018114611baf5760028114611bb957611bd5565b600191505061047b565b60ff841115611bca57611bca611a1d565b50506001821b61047b565b5060208310610133831016604e8410600b8410161715611bf8575081810a61047b565b611c028383611b3a565b8060001904821115611c1657611c16611a1d565b029392505050565b600061086260ff841683611b7d565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60008060408385031215611ccb57600080fd5b8251611cd681611788565b6020939093015192949293505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611d4357600080fd5b8151610862816117c9565b60005b83811015611d69578181015183820152602001611d51565b838111156106145750506000910152565b60008251611d8c818460208701611d4e565b9190910192915050565b6020815260008251806020840152611db5816040850160208701611d4e565b601f01601f1916919091016040019291505056fea2646970667358221220ccc3572b7ef2ac7caebc25d510bb27d5c095ffd36f02f3e09de0b4668321972764736f6c63430008090033";

type MintVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintVault__factory extends ContractFactory {
  constructor(...args: MintVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MintVault";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MintVault> {
    return super.deploy(overrides || {}) as Promise<MintVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MintVault {
    return super.attach(address) as MintVault;
  }
  connect(signer: Signer): MintVault__factory {
    return super.connect(signer) as MintVault__factory;
  }
  static readonly contractName: "MintVault";
  public readonly contractName: "MintVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintVaultInterface {
    return new utils.Interface(_abi) as MintVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintVault {
    return new Contract(address, _abi, signerOrProvider) as MintVault;
  }
}
